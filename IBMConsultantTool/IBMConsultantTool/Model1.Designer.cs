//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SAMPLEModel", "BOM_CLIENT_FK", "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CLIENT), "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BOM))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "INITIATIVE_BOM_FK", "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.BOM), "INITIATIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.INITIATIVE))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "BUSINESSOB_CATE_FK", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CATEGORY), "BUSINESSOBJECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BUSINESSOBJECTIVE))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.BUSINESSOBJECTIVE), "INITIATIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.INITIATIVE))]

#endregion

namespace IBMConsultantTool
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SAMPLEEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SAMPLEEntities object using the connection string found in the 'SAMPLEEntities' section of the application configuration file.
        /// </summary>
        public SAMPLEEntities() : base("name=SAMPLEEntities", "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SAMPLEEntities object.
        /// </summary>
        public SAMPLEEntities(string connectionString) : base(connectionString, "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SAMPLEEntities object.
        /// </summary>
        public SAMPLEEntities(EntityConnection connection) : base(connection, "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BOM> BOM
        {
            get
            {
                if ((_BOM == null))
                {
                    _BOM = base.CreateObjectSet<BOM>("BOM");
                }
                return _BOM;
            }
        }
        private ObjectSet<BOM> _BOM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BUSINESSOBJECTIVE> BUSINESSOBJECTIVE
        {
            get
            {
                if ((_BUSINESSOBJECTIVE == null))
                {
                    _BUSINESSOBJECTIVE = base.CreateObjectSet<BUSINESSOBJECTIVE>("BUSINESSOBJECTIVE");
                }
                return _BUSINESSOBJECTIVE;
            }
        }
        private ObjectSet<BUSINESSOBJECTIVE> _BUSINESSOBJECTIVE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATEGORY> CATEGORY
        {
            get
            {
                if ((_CATEGORY == null))
                {
                    _CATEGORY = base.CreateObjectSet<CATEGORY>("CATEGORY");
                }
                return _CATEGORY;
            }
        }
        private ObjectSet<CATEGORY> _CATEGORY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CLIENT> CLIENT
        {
            get
            {
                if ((_CLIENT == null))
                {
                    _CLIENT = base.CreateObjectSet<CLIENT>("CLIENT");
                }
                return _CLIENT;
            }
        }
        private ObjectSet<CLIENT> _CLIENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INITIATIVE> INITIATIVE
        {
            get
            {
                if ((_INITIATIVE == null))
                {
                    _INITIATIVE = base.CreateObjectSet<INITIATIVE>("INITIATIVE");
                }
                return _INITIATIVE;
            }
        }
        private ObjectSet<INITIATIVE> _INITIATIVE;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BOM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBOM(BOM bOM)
        {
            base.AddObject("BOM", bOM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BUSINESSOBJECTIVE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBUSINESSOBJECTIVE(BUSINESSOBJECTIVE bUSINESSOBJECTIVE)
        {
            base.AddObject("BUSINESSOBJECTIVE", bUSINESSOBJECTIVE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATEGORY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATEGORY(CATEGORY cATEGORY)
        {
            base.AddObject("CATEGORY", cATEGORY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CLIENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCLIENT(CLIENT cLIENT)
        {
            base.AddObject("CLIENT", cLIENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INITIATIVE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINITIATIVE(INITIATIVE iNITIATIVE)
        {
            base.AddObject("INITIATIVE", iNITIATIVE);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="BOM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BOM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BOM object.
        /// </summary>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="bOMID">Initial value of the BOMID property.</param>
        public static BOM CreateBOM(global::System.String nAME, global::System.Int32 bOMID)
        {
            BOM bOM = new BOM();
            bOM.NAME = nAME;
            bOM.BOMID = bOMID;
            return bOM;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> EFFECTIVENESS
        {
            get
            {
                return _EFFECTIVENESS;
            }
            set
            {
                OnEFFECTIVENESSChanging(value);
                ReportPropertyChanging("EFFECTIVENESS");
                _EFFECTIVENESS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EFFECTIVENESS");
                OnEFFECTIVENESSChanged();
            }
        }
        private Nullable<global::System.Int16> _EFFECTIVENESS;
        partial void OnEFFECTIVENESSChanging(Nullable<global::System.Int16> value);
        partial void OnEFFECTIVENESSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CRITICALITY
        {
            get
            {
                return _CRITICALITY;
            }
            set
            {
                OnCRITICALITYChanging(value);
                ReportPropertyChanging("CRITICALITY");
                _CRITICALITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CRITICALITY");
                OnCRITICALITYChanged();
            }
        }
        private Nullable<global::System.Int16> _CRITICALITY;
        partial void OnCRITICALITYChanging(Nullable<global::System.Int16> value);
        partial void OnCRITICALITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> DIFFERENTIAL
        {
            get
            {
                return _DIFFERENTIAL;
            }
            set
            {
                OnDIFFERENTIALChanging(value);
                ReportPropertyChanging("DIFFERENTIAL");
                _DIFFERENTIAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DIFFERENTIAL");
                OnDIFFERENTIALChanged();
            }
        }
        private Nullable<global::System.Int16> _DIFFERENTIAL;
        partial void OnDIFFERENTIALChanging(Nullable<global::System.Int16> value);
        partial void OnDIFFERENTIALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PARTICIPANTCOUNT
        {
            get
            {
                return _PARTICIPANTCOUNT;
            }
            set
            {
                OnPARTICIPANTCOUNTChanging(value);
                ReportPropertyChanging("PARTICIPANTCOUNT");
                _PARTICIPANTCOUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PARTICIPANTCOUNT");
                OnPARTICIPANTCOUNTChanged();
            }
        }
        private Nullable<global::System.Int32> _PARTICIPANTCOUNT;
        partial void OnPARTICIPANTCOUNTChanging(Nullable<global::System.Int32> value);
        partial void OnPARTICIPANTCOUNTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BOMID
        {
            get
            {
                return _BOMID;
            }
            set
            {
                if (_BOMID != value)
                {
                    OnBOMIDChanging(value);
                    ReportPropertyChanging("BOMID");
                    _BOMID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BOMID");
                    OnBOMIDChanged();
                }
            }
        }
        private global::System.Int32 _BOMID;
        partial void OnBOMIDChanging(global::System.Int32 value);
        partial void OnBOMIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BOM_CLIENT_FK", "CLIENT")]
        public CLIENT CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.BOM_CLIENT_FK", "CLIENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.BOM_CLIENT_FK", "CLIENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CLIENT> CLIENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.BOM_CLIENT_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CLIENT>("SAMPLEModel.BOM_CLIENT_FK", "CLIENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "INITIATIVE_BOM_FK", "INITIATIVE")]
        public EntityCollection<INITIATIVE> INITIATIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INITIATIVE>("SAMPLEModel.INITIATIVE_BOM_FK", "INITIATIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INITIATIVE>("SAMPLEModel.INITIATIVE_BOM_FK", "INITIATIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="BUSINESSOBJECTIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BUSINESSOBJECTIVE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BUSINESSOBJECTIVE object.
        /// </summary>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="bUSINESSOBJECTIVEID">Initial value of the BUSINESSOBJECTIVEID property.</param>
        public static BUSINESSOBJECTIVE CreateBUSINESSOBJECTIVE(global::System.String nAME, global::System.Int32 bUSINESSOBJECTIVEID)
        {
            BUSINESSOBJECTIVE bUSINESSOBJECTIVE = new BUSINESSOBJECTIVE();
            bUSINESSOBJECTIVE.NAME = nAME;
            bUSINESSOBJECTIVE.BUSINESSOBJECTIVEID = bUSINESSOBJECTIVEID;
            return bUSINESSOBJECTIVE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BUSINESSOBJECTIVEID
        {
            get
            {
                return _BUSINESSOBJECTIVEID;
            }
            set
            {
                if (_BUSINESSOBJECTIVEID != value)
                {
                    OnBUSINESSOBJECTIVEIDChanging(value);
                    ReportPropertyChanging("BUSINESSOBJECTIVEID");
                    _BUSINESSOBJECTIVEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BUSINESSOBJECTIVEID");
                    OnBUSINESSOBJECTIVEIDChanged();
                }
            }
        }
        private global::System.Int32 _BUSINESSOBJECTIVEID;
        partial void OnBUSINESSOBJECTIVEIDChanging(global::System.Int32 value);
        partial void OnBUSINESSOBJECTIVEIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BUSINESSOB_CATE_FK", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("SAMPLEModel.BUSINESSOB_CATE_FK", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("SAMPLEModel.BUSINESSOB_CATE_FK", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("SAMPLEModel.BUSINESSOB_CATE_FK", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("SAMPLEModel.BUSINESSOB_CATE_FK", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "INIT_BUSINESSOB_FK", "INITIATIVE")]
        public EntityCollection<INITIATIVE> INITIATIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INITIATIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "INITIATIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INITIATIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "INITIATIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="CATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATEGORY object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static CATEGORY CreateCATEGORY(global::System.Int32 id, global::System.String nAME)
        {
            CATEGORY cATEGORY = new CATEGORY();
            cATEGORY.ID = id;
            cATEGORY.NAME = nAME;
            return cATEGORY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE")]
        public EntityCollection<BUSINESSOBJECTIVE> BUSINESSOBJECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BUSINESSOBJECTIVE>("SAMPLEModel.BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BUSINESSOBJECTIVE>("SAMPLEModel.BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="CLIENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CLIENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CLIENT object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static CLIENT CreateCLIENT(global::System.Int32 id, global::System.String nAME)
        {
            CLIENT cLIENT = new CLIENT();
            cLIENT.ID = id;
            cLIENT.NAME = nAME;
            return cLIENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BOM_CLIENT_FK", "BOM")]
        public EntityCollection<BOM> BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BOM>("SAMPLEModel.BOM_CLIENT_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BOM>("SAMPLEModel.BOM_CLIENT_FK", "BOM", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="INITIATIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INITIATIVE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INITIATIVE object.
        /// </summary>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="iNITIATIVEID">Initial value of the INITIATIVEID property.</param>
        public static INITIATIVE CreateINITIATIVE(global::System.String nAME, global::System.Int32 iNITIATIVEID)
        {
            INITIATIVE iNITIATIVE = new INITIATIVE();
            iNITIATIVE.NAME = nAME;
            iNITIATIVE.INITIATIVEID = iNITIATIVEID;
            return iNITIATIVE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INITIATIVEID
        {
            get
            {
                return _INITIATIVEID;
            }
            set
            {
                if (_INITIATIVEID != value)
                {
                    OnINITIATIVEIDChanging(value);
                    ReportPropertyChanging("INITIATIVEID");
                    _INITIATIVEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("INITIATIVEID");
                    OnINITIATIVEIDChanged();
                }
            }
        }
        private global::System.Int32 _INITIATIVEID;
        partial void OnINITIATIVEIDChanging(global::System.Int32 value);
        partial void OnINITIATIVEIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "INITIATIVE_BOM_FK", "BOM")]
        public BOM BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.INITIATIVE_BOM_FK", "BOM").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.INITIATIVE_BOM_FK", "BOM").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BOM> BOMReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.INITIATIVE_BOM_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BOM>("SAMPLEModel.INITIATIVE_BOM_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE")]
        public BUSINESSOBJECTIVE BUSINESSOBJECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BUSINESSOBJECTIVE> BUSINESSOBJECTIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BUSINESSOBJECTIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}

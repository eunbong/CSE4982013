//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SAMPLEModel", "BOM_CLIENT_FK", "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CLIENT), "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BOM))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "BOM_GROUP_FK", "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.GROUP), "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BOM))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "BOM_INITIATIVE_FK", "INITIATIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.INITIATIVE), "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BOM))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "GROUP_BOM_FK", "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.BOM), "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.GROUP))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "INITIATIVE_BOM_FK", "BOM", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.BOM), "INITIATIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.INITIATIVE))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "BUSINESSOB_CATE_FK", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CATEGORY), "BUSINESSOBJECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.BUSINESSOBJECTIVE))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.BUSINESSOBJECTIVE), "INITIATIVE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.INITIATIVE))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "GROUP_CLIENT_FK", "CLIENT", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CLIENT), "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.GROUP))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "CUPE_CUPEQUESTI_FK", "CUPEQUESTION", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CUPEQUESTION), "CUPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPE))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "CUPE_GROUP_FK", "GROUP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.GROUP), "CUPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPE))]
[assembly: EdmRelationshipAttribute("SAMPLEModel", "CUPEQUESTI_CUPE_FK", "CUPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(IBMConsultantTool.CUPE), "CUPEQUESTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IBMConsultantTool.CUPEQUESTION))]

#endregion

namespace IBMConsultantTool
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SAMPLEEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SAMPLEEntities object using the connection string found in the 'SAMPLEEntities' section of the application configuration file.
        /// </summary>
        public SAMPLEEntities() : base("name=SAMPLEEntities", "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SAMPLEEntities object.
        /// </summary>
        public SAMPLEEntities(string connectionString) : base(connectionString, "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SAMPLEEntities object.
        /// </summary>
        public SAMPLEEntities(EntityConnection connection) : base(connection, "SAMPLEEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BOM> BOM
        {
            get
            {
                if ((_BOM == null))
                {
                    _BOM = base.CreateObjectSet<BOM>("BOM");
                }
                return _BOM;
            }
        }
        private ObjectSet<BOM> _BOM;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BUSINESSOBJECTIVE> BUSINESSOBJECTIVE
        {
            get
            {
                if ((_BUSINESSOBJECTIVE == null))
                {
                    _BUSINESSOBJECTIVE = base.CreateObjectSet<BUSINESSOBJECTIVE>("BUSINESSOBJECTIVE");
                }
                return _BUSINESSOBJECTIVE;
            }
        }
        private ObjectSet<BUSINESSOBJECTIVE> _BUSINESSOBJECTIVE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATEGORY> CATEGORY
        {
            get
            {
                if ((_CATEGORY == null))
                {
                    _CATEGORY = base.CreateObjectSet<CATEGORY>("CATEGORY");
                }
                return _CATEGORY;
            }
        }
        private ObjectSet<CATEGORY> _CATEGORY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CLIENT> CLIENT
        {
            get
            {
                if ((_CLIENT == null))
                {
                    _CLIENT = base.CreateObjectSet<CLIENT>("CLIENT");
                }
                return _CLIENT;
            }
        }
        private ObjectSet<CLIENT> _CLIENT;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CUPE> CUPE
        {
            get
            {
                if ((_CUPE == null))
                {
                    _CUPE = base.CreateObjectSet<CUPE>("CUPE");
                }
                return _CUPE;
            }
        }
        private ObjectSet<CUPE> _CUPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CUPEQUESTION> CUPEQUESTION
        {
            get
            {
                if ((_CUPEQUESTION == null))
                {
                    _CUPEQUESTION = base.CreateObjectSet<CUPEQUESTION>("CUPEQUESTION");
                }
                return _CUPEQUESTION;
            }
        }
        private ObjectSet<CUPEQUESTION> _CUPEQUESTION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GROUP> GROUP
        {
            get
            {
                if ((_GROUP == null))
                {
                    _GROUP = base.CreateObjectSet<GROUP>("GROUP");
                }
                return _GROUP;
            }
        }
        private ObjectSet<GROUP> _GROUP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<INITIATIVE> INITIATIVE
        {
            get
            {
                if ((_INITIATIVE == null))
                {
                    _INITIATIVE = base.CreateObjectSet<INITIATIVE>("INITIATIVE");
                }
                return _INITIATIVE;
            }
        }
        private ObjectSet<INITIATIVE> _INITIATIVE;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BOM EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBOM(BOM bOM)
        {
            base.AddObject("BOM", bOM);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BUSINESSOBJECTIVE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBUSINESSOBJECTIVE(BUSINESSOBJECTIVE bUSINESSOBJECTIVE)
        {
            base.AddObject("BUSINESSOBJECTIVE", bUSINESSOBJECTIVE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATEGORY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATEGORY(CATEGORY cATEGORY)
        {
            base.AddObject("CATEGORY", cATEGORY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CLIENT EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCLIENT(CLIENT cLIENT)
        {
            base.AddObject("CLIENT", cLIENT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CUPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCUPE(CUPE cUPE)
        {
            base.AddObject("CUPE", cUPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CUPEQUESTION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCUPEQUESTION(CUPEQUESTION cUPEQUESTION)
        {
            base.AddObject("CUPEQUESTION", cUPEQUESTION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GROUP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGROUP(GROUP gROUP)
        {
            base.AddObject("GROUP", gROUP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the INITIATIVE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToINITIATIVE(INITIATIVE iNITIATIVE)
        {
            base.AddObject("INITIATIVE", iNITIATIVE);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="BOM")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BOM : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BOM object.
        /// </summary>
        /// <param name="pARTICIPANT">Initial value of the PARTICIPANT property.</param>
        /// <param name="bOMID">Initial value of the BOMID property.</param>
        public static BOM CreateBOM(global::System.String pARTICIPANT, global::System.Int32 bOMID)
        {
            BOM bOM = new BOM();
            bOM.PARTICIPANT = pARTICIPANT;
            bOM.BOMID = bOMID;
            return bOM;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PARTICIPANT
        {
            get
            {
                return _PARTICIPANT;
            }
            set
            {
                OnPARTICIPANTChanging(value);
                ReportPropertyChanging("PARTICIPANT");
                _PARTICIPANT = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PARTICIPANT");
                OnPARTICIPANTChanged();
            }
        }
        private global::System.String _PARTICIPANT;
        partial void OnPARTICIPANTChanging(global::System.String value);
        partial void OnPARTICIPANTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> EFFECTIVENESS
        {
            get
            {
                return _EFFECTIVENESS;
            }
            set
            {
                OnEFFECTIVENESSChanging(value);
                ReportPropertyChanging("EFFECTIVENESS");
                _EFFECTIVENESS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EFFECTIVENESS");
                OnEFFECTIVENESSChanged();
            }
        }
        private Nullable<global::System.Int16> _EFFECTIVENESS;
        partial void OnEFFECTIVENESSChanging(Nullable<global::System.Int16> value);
        partial void OnEFFECTIVENESSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CRITICALITY
        {
            get
            {
                return _CRITICALITY;
            }
            set
            {
                OnCRITICALITYChanging(value);
                ReportPropertyChanging("CRITICALITY");
                _CRITICALITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CRITICALITY");
                OnCRITICALITYChanged();
            }
        }
        private Nullable<global::System.Int16> _CRITICALITY;
        partial void OnCRITICALITYChanging(Nullable<global::System.Int16> value);
        partial void OnCRITICALITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> DIFFERENTIAL
        {
            get
            {
                return _DIFFERENTIAL;
            }
            set
            {
                OnDIFFERENTIALChanging(value);
                ReportPropertyChanging("DIFFERENTIAL");
                _DIFFERENTIAL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DIFFERENTIAL");
                OnDIFFERENTIALChanged();
            }
        }
        private Nullable<global::System.Int16> _DIFFERENTIAL;
        partial void OnDIFFERENTIALChanging(Nullable<global::System.Int16> value);
        partial void OnDIFFERENTIALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BOMID
        {
            get
            {
                return _BOMID;
            }
            set
            {
                if (_BOMID != value)
                {
                    OnBOMIDChanging(value);
                    ReportPropertyChanging("BOMID");
                    _BOMID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BOMID");
                    OnBOMIDChanged();
                }
            }
        }
        private global::System.Int32 _BOMID;
        partial void OnBOMIDChanging(global::System.Int32 value);
        partial void OnBOMIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BOM_CLIENT_FK", "CLIENT")]
        public CLIENT CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.BOM_CLIENT_FK", "CLIENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.BOM_CLIENT_FK", "CLIENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CLIENT> CLIENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.BOM_CLIENT_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CLIENT>("SAMPLEModel.BOM_CLIENT_FK", "CLIENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BOM_GROUP_FK", "GROUP")]
        public GROUP GROUP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("SAMPLEModel.BOM_GROUP_FK", "GROUP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("SAMPLEModel.BOM_GROUP_FK", "GROUP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUP> GROUPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("SAMPLEModel.BOM_GROUP_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUP>("SAMPLEModel.BOM_GROUP_FK", "GROUP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BOM_INITIATIVE_FK", "INITIATIVE")]
        public INITIATIVE INITIATIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INITIATIVE>("SAMPLEModel.BOM_INITIATIVE_FK", "INITIATIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INITIATIVE>("SAMPLEModel.BOM_INITIATIVE_FK", "INITIATIVE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<INITIATIVE> INITIATIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<INITIATIVE>("SAMPLEModel.BOM_INITIATIVE_FK", "INITIATIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<INITIATIVE>("SAMPLEModel.BOM_INITIATIVE_FK", "INITIATIVE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "GROUP_BOM_FK", "GROUP")]
        public EntityCollection<GROUP> GROUP1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GROUP>("SAMPLEModel.GROUP_BOM_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GROUP>("SAMPLEModel.GROUP_BOM_FK", "GROUP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "INITIATIVE_BOM_FK", "INITIATIVE")]
        public EntityCollection<INITIATIVE> INITIATIVE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INITIATIVE>("SAMPLEModel.INITIATIVE_BOM_FK", "INITIATIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INITIATIVE>("SAMPLEModel.INITIATIVE_BOM_FK", "INITIATIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="BUSINESSOBJECTIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BUSINESSOBJECTIVE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BUSINESSOBJECTIVE object.
        /// </summary>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="bUSINESSOBJECTIVEID">Initial value of the BUSINESSOBJECTIVEID property.</param>
        public static BUSINESSOBJECTIVE CreateBUSINESSOBJECTIVE(global::System.String nAME, global::System.Int32 bUSINESSOBJECTIVEID)
        {
            BUSINESSOBJECTIVE bUSINESSOBJECTIVE = new BUSINESSOBJECTIVE();
            bUSINESSOBJECTIVE.NAME = nAME;
            bUSINESSOBJECTIVE.BUSINESSOBJECTIVEID = bUSINESSOBJECTIVEID;
            return bUSINESSOBJECTIVE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BUSINESSOBJECTIVEID
        {
            get
            {
                return _BUSINESSOBJECTIVEID;
            }
            set
            {
                if (_BUSINESSOBJECTIVEID != value)
                {
                    OnBUSINESSOBJECTIVEIDChanging(value);
                    ReportPropertyChanging("BUSINESSOBJECTIVEID");
                    _BUSINESSOBJECTIVEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BUSINESSOBJECTIVEID");
                    OnBUSINESSOBJECTIVEIDChanged();
                }
            }
        }
        private global::System.Int32 _BUSINESSOBJECTIVEID;
        partial void OnBUSINESSOBJECTIVEIDChanging(global::System.Int32 value);
        partial void OnBUSINESSOBJECTIVEIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BUSINESSOB_CATE_FK", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("SAMPLEModel.BUSINESSOB_CATE_FK", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("SAMPLEModel.BUSINESSOB_CATE_FK", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("SAMPLEModel.BUSINESSOB_CATE_FK", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("SAMPLEModel.BUSINESSOB_CATE_FK", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "INIT_BUSINESSOB_FK", "INITIATIVE")]
        public EntityCollection<INITIATIVE> INITIATIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<INITIATIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "INITIATIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<INITIATIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "INITIATIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="CATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATEGORY object.
        /// </summary>
        /// <param name="cATEGORYID">Initial value of the CATEGORYID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static CATEGORY CreateCATEGORY(global::System.Int32 cATEGORYID, global::System.String nAME)
        {
            CATEGORY cATEGORY = new CATEGORY();
            cATEGORY.CATEGORYID = cATEGORYID;
            cATEGORY.NAME = nAME;
            return cATEGORY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORYID
        {
            get
            {
                return _CATEGORYID;
            }
            set
            {
                if (_CATEGORYID != value)
                {
                    OnCATEGORYIDChanging(value);
                    ReportPropertyChanging("CATEGORYID");
                    _CATEGORYID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORYID");
                    OnCATEGORYIDChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORYID;
        partial void OnCATEGORYIDChanging(global::System.Int32 value);
        partial void OnCATEGORYIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE")]
        public EntityCollection<BUSINESSOBJECTIVE> BUSINESSOBJECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BUSINESSOBJECTIVE>("SAMPLEModel.BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BUSINESSOBJECTIVE>("SAMPLEModel.BUSINESSOB_CATE_FK", "BUSINESSOBJECTIVE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="CLIENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CLIENT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CLIENT object.
        /// </summary>
        /// <param name="cLIENTID">Initial value of the CLIENTID property.</param>
        /// <param name="nAME">Initial value of the NAME property.</param>
        public static CLIENT CreateCLIENT(global::System.Int32 cLIENTID, global::System.String nAME)
        {
            CLIENT cLIENT = new CLIENT();
            cLIENT.CLIENTID = cLIENTID;
            cLIENT.NAME = nAME;
            return cLIENT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CLIENTID
        {
            get
            {
                return _CLIENTID;
            }
            set
            {
                if (_CLIENTID != value)
                {
                    OnCLIENTIDChanging(value);
                    ReportPropertyChanging("CLIENTID");
                    _CLIENTID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CLIENTID");
                    OnCLIENTIDChanged();
                }
            }
        }
        private global::System.Int32 _CLIENTID;
        partial void OnCLIENTIDChanging(global::System.Int32 value);
        partial void OnCLIENTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BOM_CLIENT_FK", "BOM")]
        public EntityCollection<BOM> BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BOM>("SAMPLEModel.BOM_CLIENT_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BOM>("SAMPLEModel.BOM_CLIENT_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "GROUP_CLIENT_FK", "GROUP")]
        public EntityCollection<GROUP> GROUP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GROUP>("SAMPLEModel.GROUP_CLIENT_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GROUP>("SAMPLEModel.GROUP_CLIENT_FK", "GROUP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="CUPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CUPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CUPE object.
        /// </summary>
        /// <param name="cUPEID">Initial value of the CUPEID property.</param>
        public static CUPE CreateCUPE(global::System.String cUPEID)
        {
            CUPE cUPE = new CUPE();
            cUPE.CUPEID = cUPEID;
            return cUPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CUPEID
        {
            get
            {
                return _CUPEID;
            }
            set
            {
                if (_CUPEID != value)
                {
                    OnCUPEIDChanging(value);
                    ReportPropertyChanging("CUPEID");
                    _CUPEID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CUPEID");
                    OnCUPEIDChanged();
                }
            }
        }
        private global::System.String _CUPEID;
        partial void OnCUPEIDChanging(global::System.String value);
        partial void OnCUPEIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PARTICIPANT
        {
            get
            {
                return _PARTICIPANT;
            }
            set
            {
                OnPARTICIPANTChanging(value);
                ReportPropertyChanging("PARTICIPANT");
                _PARTICIPANT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PARTICIPANT");
                OnPARTICIPANTChanged();
            }
        }
        private global::System.String _PARTICIPANT;
        partial void OnPARTICIPANTChanging(global::System.String value);
        partial void OnPARTICIPANTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ANSWER
        {
            get
            {
                return _ANSWER;
            }
            set
            {
                OnANSWERChanging(value);
                ReportPropertyChanging("ANSWER");
                _ANSWER = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ANSWER");
                OnANSWERChanged();
            }
        }
        private global::System.String _ANSWER;
        partial void OnANSWERChanging(global::System.String value);
        partial void OnANSWERChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "CUPE_CUPEQUESTI_FK", "CUPEQUESTION")]
        public CUPEQUESTION CUPEQUESTION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPEQUESTION>("SAMPLEModel.CUPE_CUPEQUESTI_FK", "CUPEQUESTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPEQUESTION>("SAMPLEModel.CUPE_CUPEQUESTI_FK", "CUPEQUESTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CUPEQUESTION> CUPEQUESTIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPEQUESTION>("SAMPLEModel.CUPE_CUPEQUESTI_FK", "CUPEQUESTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CUPEQUESTION>("SAMPLEModel.CUPE_CUPEQUESTI_FK", "CUPEQUESTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "CUPE_GROUP_FK", "GROUP")]
        public GROUP GROUP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("SAMPLEModel.CUPE_GROUP_FK", "GROUP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("SAMPLEModel.CUPE_GROUP_FK", "GROUP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GROUP> GROUPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GROUP>("SAMPLEModel.CUPE_GROUP_FK", "GROUP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GROUP>("SAMPLEModel.CUPE_GROUP_FK", "GROUP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "CUPEQUESTI_CUPE_FK", "CUPEQUESTION")]
        public EntityCollection<CUPEQUESTION> CUPEQUESTION1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPEQUESTION>("SAMPLEModel.CUPEQUESTI_CUPE_FK", "CUPEQUESTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPEQUESTION>("SAMPLEModel.CUPEQUESTI_CUPE_FK", "CUPEQUESTION", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="CUPEQUESTION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CUPEQUESTION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CUPEQUESTION object.
        /// </summary>
        /// <param name="cUPEQUESTIONID">Initial value of the CUPEQUESTIONID property.</param>
        public static CUPEQUESTION CreateCUPEQUESTION(global::System.String cUPEQUESTIONID)
        {
            CUPEQUESTION cUPEQUESTION = new CUPEQUESTION();
            cUPEQUESTION.CUPEQUESTIONID = cUPEQUESTIONID;
            return cUPEQUESTION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CUPEQUESTIONID
        {
            get
            {
                return _CUPEQUESTIONID;
            }
            set
            {
                if (_CUPEQUESTIONID != value)
                {
                    OnCUPEQUESTIONIDChanging(value);
                    ReportPropertyChanging("CUPEQUESTIONID");
                    _CUPEQUESTIONID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CUPEQUESTIONID");
                    OnCUPEQUESTIONIDChanged();
                }
            }
        }
        private global::System.String _CUPEQUESTIONID;
        partial void OnCUPEQUESTIONIDChanging(global::System.String value);
        partial void OnCUPEQUESTIONIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QUESTION
        {
            get
            {
                return _QUESTION;
            }
            set
            {
                OnQUESTIONChanging(value);
                ReportPropertyChanging("QUESTION");
                _QUESTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QUESTION");
                OnQUESTIONChanged();
            }
        }
        private global::System.String _QUESTION;
        partial void OnQUESTIONChanging(global::System.String value);
        partial void OnQUESTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String C
        {
            get
            {
                return _C;
            }
            set
            {
                OnCChanging(value);
                ReportPropertyChanging("C");
                _C = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("C");
                OnCChanged();
            }
        }
        private global::System.String _C;
        partial void OnCChanging(global::System.String value);
        partial void OnCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String U
        {
            get
            {
                return _U;
            }
            set
            {
                OnUChanging(value);
                ReportPropertyChanging("U");
                _U = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("U");
                OnUChanged();
            }
        }
        private global::System.String _U;
        partial void OnUChanging(global::System.String value);
        partial void OnUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String P
        {
            get
            {
                return _P;
            }
            set
            {
                OnPChanging(value);
                ReportPropertyChanging("P");
                _P = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("P");
                OnPChanged();
            }
        }
        private global::System.String _P;
        partial void OnPChanging(global::System.String value);
        partial void OnPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String E
        {
            get
            {
                return _E;
            }
            set
            {
                OnEChanging(value);
                ReportPropertyChanging("E");
                _E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("E");
                OnEChanged();
            }
        }
        private global::System.String _E;
        partial void OnEChanging(global::System.String value);
        partial void OnEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "CUPE_CUPEQUESTI_FK", "CUPE")]
        public EntityCollection<CUPE> CUPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPE>("SAMPLEModel.CUPE_CUPEQUESTI_FK", "CUPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPE>("SAMPLEModel.CUPE_CUPEQUESTI_FK", "CUPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "CUPEQUESTI_CUPE_FK", "CUPE")]
        public CUPE CUPE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPE>("SAMPLEModel.CUPEQUESTI_CUPE_FK", "CUPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPE>("SAMPLEModel.CUPEQUESTI_CUPE_FK", "CUPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CUPE> CUPE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CUPE>("SAMPLEModel.CUPEQUESTI_CUPE_FK", "CUPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CUPE>("SAMPLEModel.CUPEQUESTI_CUPE_FK", "CUPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="GROUP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GROUP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GROUP object.
        /// </summary>
        /// <param name="gROUPID">Initial value of the GROUPID property.</param>
        public static GROUP CreateGROUP(global::System.String gROUPID)
        {
            GROUP gROUP = new GROUP();
            gROUP.GROUPID = gROUPID;
            return gROUP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GROUPID
        {
            get
            {
                return _GROUPID;
            }
            set
            {
                if (_GROUPID != value)
                {
                    OnGROUPIDChanging(value);
                    ReportPropertyChanging("GROUPID");
                    _GROUPID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("GROUPID");
                    OnGROUPIDChanged();
                }
            }
        }
        private global::System.String _GROUPID;
        partial void OnGROUPIDChanging(global::System.String value);
        partial void OnGROUPIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BOM_GROUP_FK", "BOM")]
        public EntityCollection<BOM> BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BOM>("SAMPLEModel.BOM_GROUP_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BOM>("SAMPLEModel.BOM_GROUP_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "GROUP_BOM_FK", "BOM")]
        public BOM BOM1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.GROUP_BOM_FK", "BOM").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.GROUP_BOM_FK", "BOM").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BOM> BOM1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.GROUP_BOM_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BOM>("SAMPLEModel.GROUP_BOM_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "GROUP_CLIENT_FK", "CLIENT")]
        public CLIENT CLIENT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.GROUP_CLIENT_FK", "CLIENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.GROUP_CLIENT_FK", "CLIENT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CLIENT> CLIENTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CLIENT>("SAMPLEModel.GROUP_CLIENT_FK", "CLIENT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CLIENT>("SAMPLEModel.GROUP_CLIENT_FK", "CLIENT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "CUPE_GROUP_FK", "CUPE")]
        public EntityCollection<CUPE> CUPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CUPE>("SAMPLEModel.CUPE_GROUP_FK", "CUPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CUPE>("SAMPLEModel.CUPE_GROUP_FK", "CUPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SAMPLEModel", Name="INITIATIVE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class INITIATIVE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new INITIATIVE object.
        /// </summary>
        /// <param name="nAME">Initial value of the NAME property.</param>
        /// <param name="iNITIATIVEID">Initial value of the INITIATIVEID property.</param>
        public static INITIATIVE CreateINITIATIVE(global::System.String nAME, global::System.Int32 iNITIATIVEID)
        {
            INITIATIVE iNITIATIVE = new INITIATIVE();
            iNITIATIVE.NAME = nAME;
            iNITIATIVE.INITIATIVEID = iNITIATIVEID;
            return iNITIATIVE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                OnNAMEChanging(value);
                ReportPropertyChanging("NAME");
                _NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NAME");
                OnNAMEChanged();
            }
        }
        private global::System.String _NAME;
        partial void OnNAMEChanging(global::System.String value);
        partial void OnNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 INITIATIVEID
        {
            get
            {
                return _INITIATIVEID;
            }
            set
            {
                if (_INITIATIVEID != value)
                {
                    OnINITIATIVEIDChanging(value);
                    ReportPropertyChanging("INITIATIVEID");
                    _INITIATIVEID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("INITIATIVEID");
                    OnINITIATIVEIDChanged();
                }
            }
        }
        private global::System.Int32 _INITIATIVEID;
        partial void OnINITIATIVEIDChanging(global::System.Int32 value);
        partial void OnINITIATIVEIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "BOM_INITIATIVE_FK", "BOM")]
        public EntityCollection<BOM> BOM
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BOM>("SAMPLEModel.BOM_INITIATIVE_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BOM>("SAMPLEModel.BOM_INITIATIVE_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "INITIATIVE_BOM_FK", "BOM")]
        public BOM BOM1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.INITIATIVE_BOM_FK", "BOM").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.INITIATIVE_BOM_FK", "BOM").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BOM> BOM1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BOM>("SAMPLEModel.INITIATIVE_BOM_FK", "BOM");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BOM>("SAMPLEModel.INITIATIVE_BOM_FK", "BOM", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMPLEModel", "INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE")]
        public BUSINESSOBJECTIVE BUSINESSOBJECTIVE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BUSINESSOBJECTIVE> BUSINESSOBJECTIVEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BUSINESSOBJECTIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BUSINESSOBJECTIVE>("SAMPLEModel.INIT_BUSINESSOB_FK", "BUSINESSOBJECTIVE", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
